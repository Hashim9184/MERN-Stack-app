{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Project\\\\dash\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      users: [],\n      username: \"\",\n      email: \"\"\n    };\n    this.data = [];\n\n    this.componentDidMount = () => {\n      this.getBlogPost();\n    };\n\n    this.getBlogPost = () => {\n      axios.get(\"/api\").then(response => {\n        data.push(response.data);\n        this.setState({\n          data: [...this.state.users]\n        });\n        console.log(\"Data has been recieved\");\n        console.log(data);\n      }).catch(() => {\n        alert(\"Error retriving data\");\n      });\n    };\n\n    this.displayLogPost = users => {\n      if (!users.lenght) return null;\n    };\n  }\n\n  render() {\n    const {\n      users\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"das\",\n      children: [data.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)), console.log(`Bullshit: ${this.state.users}`)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/React Project/dash/client/src/App.js"],"names":["React","axios","App","Component","state","users","username","email","data","componentDidMount","getBlogPost","get","then","response","push","setState","console","log","catch","alert","displayLogPost","lenght","render","map","user","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADwB;AAAA,SAMhCC,IANgC,GAMzB,EANyB;;AAAA,SAOhCC,iBAPgC,GAOZ,MAAM;AACxB,WAAKC,WAAL;AACD,KAT+B;;AAAA,SAWhCA,WAXgC,GAWlB,MAAM;AAClBT,MAAAA,KAAK,CACFU,GADH,CACO,MADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBL,QAAAA,IAAI,CAACM,IAAL,CAAUD,QAAQ,CAACL,IAAnB;AACA,aAAKO,QAAL,CAAc;AAAEP,UAAAA,IAAI,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWC,KAAf;AAAR,SAAd;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACD,OAPH,EAQGU,KARH,CAQS,MAAM;AACXC,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,OAVH;AAWD,KAvB+B;;AAAA,SAwBhCC,cAxBgC,GAwBdf,KAAD,IAAW;AAC1B,UAAI,CAACA,KAAK,CAACgB,MAAX,EAAmB,OAAO,IAAP;AACpB,KA1B+B;AAAA;;AA4BhCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBAIGI,IAAI,CAACe,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR;AAAA,gCACE;AAAA,oBAAKD,IAAI,CAAClB;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIkB,IAAI,CAACjB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUkB,KAAV;AAAA;AAAA;AAAA;AAAA,cADD,CAJH,EAWGT,OAAO,CAACC,GAAR,CAAa,aAAY,KAAKb,KAAL,CAAWC,KAAM,EAA1C,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA7C+B;;AA+ClC,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  state = {\n    users: [],\n    username: \"\",\n    email: \"\",\n  };\n  data = []\n  componentDidMount = () => {\n    this.getBlogPost();\n  };\n\n  getBlogPost = () => {\n    axios\n      .get(\"/api\")\n      .then((response) => {\n        data.push(response.data);\n        this.setState({ data: [...this.state.users] });\n        console.log(\"Data has been recieved\");\n        console.log(data);\n      })\n      .catch(() => {\n        alert(\"Error retriving data\");\n      });\n  };\n  displayLogPost = (users) => {\n    if (!users.lenght) return null;\n  };\n\n  render() {\n    const { users } = this.state;\n    return (\n      <div className=\"das\">\n        {/* {this.displayLogPost(this.state.users)}\n         */}\n\n        {data.map((user, index) => (\n          <div key={index}>\n            <h1>{user.username}</h1>\n            <p>{user.email}</p>\n          </div>\n        ))}\n\n        {console.log(`Bullshit: ${this.state.users}`)}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}