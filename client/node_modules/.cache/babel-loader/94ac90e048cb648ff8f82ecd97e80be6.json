{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Project\\\\dash\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      users: [],\n      username: '',\n      email: ''\n    };\n\n    this.componentDidMount = () => {\n      this.getBlogPost();\n    };\n\n    this.getBlogPost = () => {\n      axios.get('/api').then(response => {\n        const {\n          users\n        } = response.data;\n        this.setState({\n          data: [...this.state.users]\n        });\n        console.log(\"Data has been recieved\");\n        console.log(data);\n      }).catch(() => {\n        alert('Error retriving data');\n      });\n    };\n\n    this.displayLogPost = users => {\n      if (!users.lenght) return null;\n      return users.maps((user, index) => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 5\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"das\",\n      children: this.displayLogPost(this.state.users)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/React Project/dash/client/src/App.js"],"names":["React","axios","App","Component","state","users","username","email","componentDidMount","getBlogPost","get","then","response","data","setState","console","log","catch","alert","displayLogPost","lenght","maps","user","index","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAExB;AACLC,MAAAA,KAAK,EAAC,EADD;AAELC,MAAAA,QAAQ,EAAE,EAFL;AAGLC,MAAAA,KAAK,EAAE;AAHF,KAFwB;;AAAA,SAQ/BC,iBAR+B,GAQX,MAAK;AACvB,WAAKC,WAAL;AACD,KAV8B;;AAAA,SAY/BA,WAZ+B,GAYjB,MAAK;AACjBR,MAAAA,KAAK,CAACS,GAAN,CAAU,MAAV,EACCC,IADD,CACOC,QAAD,IAAa;AACjB,cAAM;AAACP,UAAAA;AAAD,YAAUO,QAAQ,CAACC,IAAzB;AACA,aAAKC,QAAL,CAAc;AAAED,UAAAA,IAAI,EAAE,CAAC,GAAG,KAAKT,KAAL,CAAWC,KAAf;AAAR,SAAd;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,OAND,EAOCI,KAPD,CAOO,MAAK;AACVC,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,OATD;AAUD,KAvB8B;;AAAA,SAwBjCC,cAxBiC,GAwBfd,KAAD,IAAU;AAEzB,UAAG,CAACA,KAAK,CAACe,MAAV,EAAkB,OAAO,IAAP;AAElB,aAAOf,KAAK,CAACgB,IAAN,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAgB;AAChC;AAAA;AAAA,kCACA;AAAA,sBAAKD,IAAI,CAAChB;AAAV;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAIgB,IAAI,CAACf;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA,WAAUgB,KAAV;AAAA;AAAA;AAAA;AAAA;AAKD,OANM,CAAP;AAOD,KAnCgC;AAAA;;AAqC/BC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACA,KAAKL,cAAL,CAAoB,KAAKf,KAAL,CAAWC,KAA/B;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA5C8B;;AA+CjC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios'\n\nclass App extends React.Component{\n\n  state ={\n    users:[],\n    username: '',\n    email: ''\n  };\n  \n  componentDidMount = () =>{\n    this.getBlogPost()\n  }\n\n  getBlogPost = () =>{\n    axios.get('/api') \n    .then((response) =>{\n      const {users} = response.data;\n      this.setState({ data: [...this.state.users] })\n      console.log(\"Data has been recieved\");\n      console.log(data)\n    })\n    .catch(() =>{\n      alert('Error retriving data');\n    });\n  }\ndisplayLogPost = (users) =>{\n \n  if(!users.lenght) return null;\n\n  return users.maps((user, index) =>{\n    <div key={index}>\n    <h1>{user.username}</h1>\n    <p>{user.email}</p>\n\n    </div>\n  })\n}\n\n  render(){\n    return(\n      <div className=\"das\">\n     {this.displayLogPost(this.state.users)}\n     {/* {this.state.username} */}\n     </div>\n    )\n  }\n  \n}\nexport default App"]},"metadata":{},"sourceType":"module"}